{
  "new: typeScriptReactFunctionalComponent": {
    "prefix": "new-Component",
    "body": [
      "import React, { FC } from 'react'",
      "",
      "const ${1:${TM_FILENAME_BASE}}: FC = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$0",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Functional Component"
  },
  "new: typeScriptReactFunctionalComponentProps": {
    "prefix": "new-ComponentProps",
    "body": [
      "import React, { FC } from 'react'",
      "",
      "interface I${1:${TM_FILENAME_BASE}}Props {",
      "\t${2:prop}: ${3|string,boolean,() => void|}",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}}: FC<I${1:${TM_FILENAME_BASE}}Props> = ({ ${2:prop} }) => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t{${2:prop}}$0",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      ""
    ],
    "description": "Functional Component with props + TS interface"
  },
  "add: TSInterfaceAndProps": {
    "prefix": "add-Props",
    "body": [
      "",
      "interface I${1:${TM_FILENAME_BASE}}Props {",
      "\t${2:props}: ${3|string,boolean,() => void|}",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}}: FC<I${1:${TM_FILENAME_BASE}}Props> = (props) => {"
    ],
    "description": "Adds props + TS interface"
  },
  "add: useState": {
    "prefix": "add-useState",
    "body": "const [$1, set$1] = useState<$2>($0)",
    "description": "Adds useState template"
  },
  "add: useEffect": {
    "prefix": "add-useEffect",
    "body": ["useEffect(() => {", "\t$1", "},[$0])"],
    "description": "Adds useEffect template"
  },
  "clipboard: react component": {
    "prefix": "clip-Component",
    "body": [
      "const ${0:NewComponent}: FC = () => {",
      "\treturn (",
      "\t\t${CLIPBOARD}",
      "\t)",
      "}",
      ""
    ],
    "description": "Create new component from clipboard contents"
  },
  "clipboard: react component with ts interface": {
    "prefix": "clip-ComponentProps",
    "body": [
      "const ${0:NewComponent}: FC = () => {",
      "\treturn (",
      "\t\t${CLIPBOARD}",
      "\t)",
      "}",
      ""
    ],
    "description": "Create new component from clipboard contents"
  }
}
